// This file is autogenerated by shader_to_inc.sh.
#ifndef fft_radix8_inc__
#define fft_radix8_inc__
namespace GLFFT { namespace Blob {
static const char fft_radix8_source[] = 
R"DELIM(/* Copyright (C) 2015 Hans-Kristian Arntzen <maister@archlinux.us>)DELIM" "\n"
R"DELIM(*)DELIM" "\n"
R"DELIM(* Permission is hereby granted, free of charge,)DELIM" "\n"
R"DELIM(* to any person obtaining a copy of this software and associated documentation files (the "Software"),)DELIM" "\n"
R"DELIM(* to deal in the Software without restriction, including without limitation the rights to)DELIM" "\n"
R"DELIM(* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,)DELIM" "\n"
R"DELIM(* and to permit persons to whom the Software is furnished to do so, subject to the following conditions:)DELIM" "\n"
R"DELIM(*)DELIM" "\n"
R"DELIM(* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.)DELIM" "\n"
R"DELIM(*)DELIM" "\n"
R"DELIM(* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,)DELIM" "\n"
R"DELIM(* INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,)DELIM" "\n"
R"DELIM(* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.)DELIM" "\n"
R"DELIM(* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,)DELIM" "\n"
R"DELIM(* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,)DELIM" "\n"
R"DELIM(* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.)DELIM" "\n"
R"DELIM(*/)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(void FFT8_p1(inout cfloat a, inout cfloat b, inout cfloat c, inout cfloat d, inout cfloat e, inout cfloat f, inout cfloat g, inout cfloat h))DELIM" "\n"
R"DELIM({)DELIM" "\n"
R"DELIM(butterfly_p1(a, e);)DELIM" "\n"
R"DELIM(butterfly_p1(b, f);)DELIM" "\n"
R"DELIM(butterfly_p1_dir_j(c, g);)DELIM" "\n"
R"DELIM(butterfly_p1_dir_j(d, h);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(butterfly_p1(a, c);)DELIM" "\n"
R"DELIM(butterfly_p1_dir_j(b, d);)DELIM" "\n"
R"DELIM(butterfly_p1(e, g);)DELIM" "\n"
R"DELIM(butterfly_p1(f, h);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(butterfly_p1(a, b);)DELIM" "\n"
R"DELIM(butterfly_p1(c, d);)DELIM" "\n"
R"DELIM(butterfly(e, f, TWIDDLE_1_8);)DELIM" "\n"
R"DELIM(butterfly(g, h, TWIDDLE_3_8);)DELIM" "\n"
R"DELIM(})DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(void FFT8(inout cfloat a, inout cfloat b, inout cfloat c, inout cfloat d, inout cfloat e, inout cfloat f, inout cfloat g, inout cfloat h, uint i, uint p))DELIM" "\n"
R"DELIM({)DELIM" "\n"
R"DELIM(uint k = i & (p - 1u);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(ctwiddle w = twiddle(k, p);)DELIM" "\n"
R"DELIM(butterfly(a, e, w);)DELIM" "\n"
R"DELIM(butterfly(b, f, w);)DELIM" "\n"
R"DELIM(butterfly(c, g, w);)DELIM" "\n"
R"DELIM(butterfly(d, h, w);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(ctwiddle w0 = twiddle(k, 2u * p);)DELIM" "\n"
R"DELIM(ctwiddle w1 = cmul_dir_j(w0);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(butterfly(a, c, w0);)DELIM" "\n"
R"DELIM(butterfly(b, d, w0);)DELIM" "\n"
R"DELIM(butterfly(e, g, w1);)DELIM" "\n"
R"DELIM(butterfly(f, h, w1);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(ctwiddle W0 = twiddle(k, 4u * p);)DELIM" "\n"
R"DELIM(ctwiddle W1 = cmul(W0, TWIDDLE_1_8);)DELIM" "\n"
R"DELIM(ctwiddle W2 = cmul_dir_j(W0);)DELIM" "\n"
R"DELIM(ctwiddle W3 = cmul_dir_j(W1);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(butterfly(a, b, W0);)DELIM" "\n"
R"DELIM(butterfly(c, d, W2);)DELIM" "\n"
R"DELIM(butterfly(e, f, W1);)DELIM" "\n"
R"DELIM(butterfly(g, h, W3);)DELIM" "\n"
R"DELIM(})DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(void FFT8_p1_horiz(uvec2 i))DELIM" "\n"
R"DELIM({)DELIM" "\n"
R"DELIM(uint octa_samples = gl_NumWorkGroups.x * gl_WorkGroupSize.x;)DELIM" "\n"
R"DELIM(uint offset = i.y * octa_samples * 8u;)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(#ifdef FFT_INPUT_TEXTURE)DELIM" "\n"
R"DELIM(cfloat a = load_texture(i);)DELIM" "\n"
R"DELIM(cfloat b = load_texture(i + uvec2(octa_samples, 0u));)DELIM" "\n"
R"DELIM(cfloat c = load_texture(i + uvec2(2u * octa_samples, 0u));)DELIM" "\n"
R"DELIM(cfloat d = load_texture(i + uvec2(3u * octa_samples, 0u));)DELIM" "\n"
R"DELIM(cfloat e = load_texture(i + uvec2(4u * octa_samples, 0u));)DELIM" "\n"
R"DELIM(cfloat f = load_texture(i + uvec2(5u * octa_samples, 0u));)DELIM" "\n"
R"DELIM(cfloat g = load_texture(i + uvec2(6u * octa_samples, 0u));)DELIM" "\n"
R"DELIM(cfloat h = load_texture(i + uvec2(7u * octa_samples, 0u));)DELIM" "\n"
R"DELIM(#else)DELIM" "\n"
R"DELIM(cfloat a = load_global(offset + i.x);)DELIM" "\n"
R"DELIM(cfloat b = load_global(offset + i.x + octa_samples);)DELIM" "\n"
R"DELIM(cfloat c = load_global(offset + i.x + 2u * octa_samples);)DELIM" "\n"
R"DELIM(cfloat d = load_global(offset + i.x + 3u * octa_samples);)DELIM" "\n"
R"DELIM(cfloat e = load_global(offset + i.x + 4u * octa_samples);)DELIM" "\n"
R"DELIM(cfloat f = load_global(offset + i.x + 5u * octa_samples);)DELIM" "\n"
R"DELIM(cfloat g = load_global(offset + i.x + 6u * octa_samples);)DELIM" "\n"
R"DELIM(cfloat h = load_global(offset + i.x + 7u * octa_samples);)DELIM" "\n"
R"DELIM(#endif)DELIM" "\n"
R"DELIM(FFT8_p1(a, b, c, d, e, f, g, h);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(#ifndef FFT_OUTPUT_IMAGE)DELIM" "\n"
R"DELIM(#if FFT_CVECTOR_SIZE == 4)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 0u, cfloat(a.x, e.x, c.x, g.x));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 1u, cfloat(b.x, f.x, d.x, h.x));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 2u, cfloat(a.y, e.y, c.y, g.y));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 3u, cfloat(b.y, f.y, d.y, h.y));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 4u, cfloat(a.z, e.z, c.z, g.z));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 5u, cfloat(b.z, f.z, d.z, h.z));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 6u, cfloat(a.w, e.w, c.w, g.w));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 7u, cfloat(b.w, f.w, d.w, h.w));)DELIM" "\n"
R"DELIM(#elif FFT_CVECTOR_SIZE == 2)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 0u, cfloat(a.xy, e.xy));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 1u, cfloat(c.xy, g.xy));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 2u, cfloat(b.xy, f.xy));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 3u, cfloat(d.xy, h.xy));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 4u, cfloat(a.zw, e.zw));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 5u, cfloat(c.zw, g.zw));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 6u, cfloat(b.zw, f.zw));)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 7u, cfloat(d.zw, h.zw));)DELIM" "\n"
R"DELIM(#else)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 0u, a);)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 1u, e);)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 2u, c);)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 3u, g);)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 4u, b);)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 5u, f);)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 6u, d);)DELIM" "\n"
R"DELIM(store_global(offset + 8u * i.x + 7u, h);)DELIM" "\n"
R"DELIM(#endif)DELIM" "\n"
R"DELIM(#endif)DELIM" "\n"
R"DELIM(})DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(void FFT8_p1_vert(uvec2 i))DELIM" "\n"
R"DELIM({)DELIM" "\n"
R"DELIM(uvec2 octa_samples = gl_NumWorkGroups.xy * gl_WorkGroupSize.xy;)DELIM" "\n"
R"DELIM(uint stride = uStride;)DELIM" "\n"
R"DELIM(uint y_stride = stride * octa_samples.y;)DELIM" "\n"
R"DELIM(uint offset = stride * i.y;)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(#ifdef FFT_INPUT_TEXTURE)DELIM" "\n"
R"DELIM(cfloat a = load_texture(i);)DELIM" "\n"
R"DELIM(cfloat b = load_texture(i + uvec2(0u, octa_samples.y));)DELIM" "\n"
R"DELIM(cfloat c = load_texture(i + uvec2(0u, 2u * octa_samples.y));)DELIM" "\n"
R"DELIM(cfloat d = load_texture(i + uvec2(0u, 3u * octa_samples.y));)DELIM" "\n"
R"DELIM(cfloat e = load_texture(i + uvec2(0u, 4u * octa_samples.y));)DELIM" "\n"
R"DELIM(cfloat f = load_texture(i + uvec2(0u, 5u * octa_samples.y));)DELIM" "\n"
R"DELIM(cfloat g = load_texture(i + uvec2(0u, 6u * octa_samples.y));)DELIM" "\n"
R"DELIM(cfloat h = load_texture(i + uvec2(0u, 7u * octa_samples.y));)DELIM" "\n"
R"DELIM(#else)DELIM" "\n"
R"DELIM(cfloat a = load_global(offset + i.x + 0u * y_stride);)DELIM" "\n"
R"DELIM(cfloat b = load_global(offset + i.x + 1u * y_stride);)DELIM" "\n"
R"DELIM(cfloat c = load_global(offset + i.x + 2u * y_stride);)DELIM" "\n"
R"DELIM(cfloat d = load_global(offset + i.x + 3u * y_stride);)DELIM" "\n"
R"DELIM(cfloat e = load_global(offset + i.x + 4u * y_stride);)DELIM" "\n"
R"DELIM(cfloat f = load_global(offset + i.x + 5u * y_stride);)DELIM" "\n"
R"DELIM(cfloat g = load_global(offset + i.x + 6u * y_stride);)DELIM" "\n"
R"DELIM(cfloat h = load_global(offset + i.x + 7u * y_stride);)DELIM" "\n"
R"DELIM(#endif)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(FFT8_p1(a, b, c, d, e, f, g, h);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(#ifndef FFT_OUTPUT_IMAGE)DELIM" "\n"
R"DELIM(store_global((8u * i.y + 0u) * stride + i.x, a);)DELIM" "\n"
R"DELIM(store_global((8u * i.y + 1u) * stride + i.x, e);)DELIM" "\n"
R"DELIM(store_global((8u * i.y + 2u) * stride + i.x, c);)DELIM" "\n"
R"DELIM(store_global((8u * i.y + 3u) * stride + i.x, g);)DELIM" "\n"
R"DELIM(store_global((8u * i.y + 4u) * stride + i.x, b);)DELIM" "\n"
R"DELIM(store_global((8u * i.y + 5u) * stride + i.x, f);)DELIM" "\n"
R"DELIM(store_global((8u * i.y + 6u) * stride + i.x, d);)DELIM" "\n"
R"DELIM(store_global((8u * i.y + 7u) * stride + i.x, h);)DELIM" "\n"
R"DELIM(#endif)DELIM" "\n"
R"DELIM(})DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(void FFT8_horiz(uvec2 i, uint p))DELIM" "\n"
R"DELIM({)DELIM" "\n"
R"DELIM(uint octa_samples = gl_NumWorkGroups.x * gl_WorkGroupSize.x;)DELIM" "\n"
R"DELIM(uint offset = i.y * octa_samples * 8u;)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(cfloat a = load_global(offset + i.x);)DELIM" "\n"
R"DELIM(cfloat b = load_global(offset + i.x + octa_samples);)DELIM" "\n"
R"DELIM(cfloat c = load_global(offset + i.x + 2u * octa_samples);)DELIM" "\n"
R"DELIM(cfloat d = load_global(offset + i.x + 3u * octa_samples);)DELIM" "\n"
R"DELIM(cfloat e = load_global(offset + i.x + 4u * octa_samples);)DELIM" "\n"
R"DELIM(cfloat f = load_global(offset + i.x + 5u * octa_samples);)DELIM" "\n"
R"DELIM(cfloat g = load_global(offset + i.x + 6u * octa_samples);)DELIM" "\n"
R"DELIM(cfloat h = load_global(offset + i.x + 7u * octa_samples);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(FFT8(a, b, c, d, e, f, g, h, FFT_OUTPUT_STEP * i.x, p);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(uint k = (FFT_OUTPUT_STEP * i.x) & (p - 1u);)DELIM" "\n"
R"DELIM(uint j = ((FFT_OUTPUT_STEP * i.x - k) * 8u) + k;)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(#ifdef FFT_OUTPUT_IMAGE)DELIM" "\n"
R"DELIM(store(ivec2(j + 0u * p, i.y), a);)DELIM" "\n"
R"DELIM(store(ivec2(j + 1u * p, i.y), e);)DELIM" "\n"
R"DELIM(store(ivec2(j + 2u * p, i.y), c);)DELIM" "\n"
R"DELIM(store(ivec2(j + 3u * p, i.y), g);)DELIM" "\n"
R"DELIM(store(ivec2(j + 4u * p, i.y), b);)DELIM" "\n"
R"DELIM(store(ivec2(j + 5u * p, i.y), f);)DELIM" "\n"
R"DELIM(store(ivec2(j + 6u * p, i.y), d);)DELIM" "\n"
R"DELIM(store(ivec2(j + 7u * p, i.y), h);)DELIM" "\n"
R"DELIM(#else)DELIM" "\n"
R"DELIM(store_global(offset + ((j + 0u * p) >> FFT_OUTPUT_SHIFT), a);)DELIM" "\n"
R"DELIM(store_global(offset + ((j + 1u * p) >> FFT_OUTPUT_SHIFT), e);)DELIM" "\n"
R"DELIM(store_global(offset + ((j + 2u * p) >> FFT_OUTPUT_SHIFT), c);)DELIM" "\n"
R"DELIM(store_global(offset + ((j + 3u * p) >> FFT_OUTPUT_SHIFT), g);)DELIM" "\n"
R"DELIM(store_global(offset + ((j + 4u * p) >> FFT_OUTPUT_SHIFT), b);)DELIM" "\n"
R"DELIM(store_global(offset + ((j + 5u * p) >> FFT_OUTPUT_SHIFT), f);)DELIM" "\n"
R"DELIM(store_global(offset + ((j + 6u * p) >> FFT_OUTPUT_SHIFT), d);)DELIM" "\n"
R"DELIM(store_global(offset + ((j + 7u * p) >> FFT_OUTPUT_SHIFT), h);)DELIM" "\n"
R"DELIM(#endif)DELIM" "\n"
R"DELIM(})DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(void FFT8_vert(uvec2 i, uint p))DELIM" "\n"
R"DELIM({)DELIM" "\n"
R"DELIM(uvec2 octa_samples = gl_NumWorkGroups.xy * gl_WorkGroupSize.xy;)DELIM" "\n"
R"DELIM(uint stride = uStride;)DELIM" "\n"
R"DELIM(uint y_stride = stride * octa_samples.y;)DELIM" "\n"
R"DELIM(uint offset = stride * i.y;)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(cfloat a = load_global(offset + i.x + 0u * y_stride);)DELIM" "\n"
R"DELIM(cfloat b = load_global(offset + i.x + 1u * y_stride);)DELIM" "\n"
R"DELIM(cfloat c = load_global(offset + i.x + 2u * y_stride);)DELIM" "\n"
R"DELIM(cfloat d = load_global(offset + i.x + 3u * y_stride);)DELIM" "\n"
R"DELIM(cfloat e = load_global(offset + i.x + 4u * y_stride);)DELIM" "\n"
R"DELIM(cfloat f = load_global(offset + i.x + 5u * y_stride);)DELIM" "\n"
R"DELIM(cfloat g = load_global(offset + i.x + 6u * y_stride);)DELIM" "\n"
R"DELIM(cfloat h = load_global(offset + i.x + 7u * y_stride);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(FFT8(a, b, c, d, e, f, g, h, i.y, p);)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(uint k = i.y & (p - 1u);)DELIM" "\n"
R"DELIM(uint j = ((i.y - k) * 8u) + k;)DELIM" "\n"
R"DELIM()DELIM" "\n"
R"DELIM(#ifdef FFT_OUTPUT_IMAGE)DELIM" "\n"
R"DELIM(store(ivec2(i.x, j + 0u * p), a);)DELIM" "\n"
R"DELIM(store(ivec2(i.x, j + 1u * p), e);)DELIM" "\n"
R"DELIM(store(ivec2(i.x, j + 2u * p), c);)DELIM" "\n"
R"DELIM(store(ivec2(i.x, j + 3u * p), g);)DELIM" "\n"
R"DELIM(store(ivec2(i.x, j + 4u * p), b);)DELIM" "\n"
R"DELIM(store(ivec2(i.x, j + 5u * p), f);)DELIM" "\n"
R"DELIM(store(ivec2(i.x, j + 6u * p), d);)DELIM" "\n"
R"DELIM(store(ivec2(i.x, j + 7u * p), h);)DELIM" "\n"
R"DELIM(#else)DELIM" "\n"
R"DELIM(store_global(stride * (j + 0u * p) + i.x, a);)DELIM" "\n"
R"DELIM(store_global(stride * (j + 1u * p) + i.x, e);)DELIM" "\n"
R"DELIM(store_global(stride * (j + 2u * p) + i.x, c);)DELIM" "\n"
R"DELIM(store_global(stride * (j + 3u * p) + i.x, g);)DELIM" "\n"
R"DELIM(store_global(stride * (j + 4u * p) + i.x, b);)DELIM" "\n"
R"DELIM(store_global(stride * (j + 5u * p) + i.x, f);)DELIM" "\n"
R"DELIM(store_global(stride * (j + 6u * p) + i.x, d);)DELIM" "\n"
R"DELIM(store_global(stride * (j + 7u * p) + i.x, h);)DELIM" "\n"
R"DELIM(#endif)DELIM" "\n"
R"DELIM(})DELIM" "\n"
R"DELIM()DELIM" "\n"
;
}}
#endif
